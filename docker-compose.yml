version: '3.3'

services:
  sveltekit:
    container_name: sveltekit-container
    restart: unless-stopped
    build:
      context: ./app
    environment:
      - PORT=3000
    volumes:
      - ./app/static:/app/static
    ports:
      - 3000:3000
    depends_on:
      - redis

  redis:
    container_name: redis
    image: redis:7.2.3-bookworm
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./volumes/redis/:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: 4G
  
  chroma:
    container_name: chromadb
    restart: unless-stopped
    image: ghcr.io/chroma-core/chroma:latest
    environment:
      - IS_PERSISTENT=TRUE
      - ALLOW_RESET=TRUE
      - CHROMA_HOST_PORT=8000
    volumes:
      - ./volumes/chroma_index_data:/chroma/.chroma/index
    ports:
      - 8003:8000
    healthcheck:
      test: curl --fail localhost:8000/api/v1/heartbeat || exit 1
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: 4G

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot

  postgres:
    image: postgres:16.3-alpine3.18
    restart: always
    # shm_size: 128mb
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  certbot:
    image: certbot/certbot:latest
    #docker-compose run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ --dry-run -d domain_name -
    #docker-compose run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ -d domain_name
    volumes:
      - "./certbot/conf:/etc/letsencrypt"
      - "./certbot/www:/var/www/certbot"


  opensearch:
    image: opensearchproject/opensearch:${OPENSEARCH_VERSION:-latest}
    container_name: unspsc-opensearch
    environment:
      discovery.type: single-node
      node.name: opensearch
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      plugins.security.disabled: true
      DISABLE_INSTALL_DEMO_CONFIG: true
      plugins.ml_commons.only_run_on_ml_node: false

    ulimits:
      memlock:
        soft: -1
        hard: -1
        
    volumes:
      - opensearch-data:/usr/share/opensearch/data

    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - opensearch-net

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:${OPENSEARCH_DASHBOARDS_VERSION:-latest}
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
    networks:
      - opensearch-net
    depends_on:
      - opensearch

volumes: 
  postgres-data: {}
  opensearch-data: {}

networks:
  opensearch-net:
    driver: bridge